import { NextRequest, NextResponse } from 'next/server'
import { TELEGRAM_CONFIG } from '@/lib/telegram'

export async function POST(req: NextRequest) {
  try {
    const { chat_id } = await req.json()
    if (!chat_id) return NextResponse.json({ ok: false, error: 'chat_id required' }, { status: 400 })

    const photo = 'https://i.ibb.co/CtBz5Mq/1JdGFT5X.png' // proxy of https://ibb.co/1JdGFT5X
    const caption = [
      'üéä LABUBU –†–£–õ–ï–¢–ö–ê ‚Äî –≤—ã–∏–≥—Ä–∞–π –Ω–∞—Å—Ç–æ—è—â–∏–µ –ø—Ä–∏–∑—ã!',
      '',
      'üß∏ –°–æ–±–∏—Ä–∞–π 4 —á–∞—Å—Ç–∏ Labubu –∏–ª–∏ –∫–æ–ø–∏ –õ–ê–ë–£ –∏ –æ–±–º–µ–Ω–∏–≤–∞–π –Ω–∞ –∏–≥—Ä—É—à–∫—É.',
      '‚ö° –ë—ã—Å—Ç—Ä—ã–µ —Å–ø–∏–Ω—ã, —á–µ—Å—Ç–Ω—ã–µ —à–∞–Ω—Å—ã, —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã.',
      '',
      '–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å –ø—Ä—è–º–æ –≤ Telegram.'
    ].join('\n')

    const kb = {
      inline_keyboard: [[
        { text: 'üéÆ –ò–≥—Ä–∞—Ç—å', web_app: { url: process.env.NEXT_PUBLIC_APP_URL || 'https://labubu-production-3acf.up.railway.app' } },
      ], [
        { text: 'üìú –ü—Ä–∞–≤–∏–ª–∞', url: (process.env.NEXT_PUBLIC_RULES_URL || 'https://labubu-production-3acf.up.railway.app#rules') },
        { text: 'üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞', url: 'https://t.me/pavel_xdev' }
      ]]
    }

    const form = new FormData()
    form.set('chat_id', String(chat_id))
    form.set('photo', photo)
    form.set('caption', caption)
    form.set('parse_mode', 'HTML')
    form.set('reply_markup', JSON.stringify(kb))

    const res = await fetch(`${TELEGRAM_CONFIG.API_URL}${TELEGRAM_CONFIG.BOT_TOKEN}/sendPhoto`, {
      method: 'POST',
      body: form as any
    })
    const json = await res.json()
    return NextResponse.json(json)
  } catch (e) {
    console.error('telegram/start error', e)
    return NextResponse.json({ ok: false, error: 'internal' }, { status: 500 })
  }
}

